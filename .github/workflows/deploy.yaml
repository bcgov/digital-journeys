# Static Deploy On Openshift
# Builds and Deploys merged PR's to persistent pods/services/routes/etc in the OpenShift Dev environment.
name: Deploy on Openshift
  
on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ DGJ62-Automate-Build ]

jobs:
  #Print variables for logging and debugging purposes
  checkEnv:
    name: Check Env variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Vars
        run: |
          echo Git Base Ref: ${{ github.base_ref }}
          echo Git Build ID: ${{ github.event.number }}
          echo Git Pull Request Ref: ${{ github.event.pull_request.head.sha }}
          echo OC CLI Version: $(oc version)
  
  # # #Build the app

  # build:
  #   name: Build APP
  #   runs-on: ubuntu-latest
  #   # if: ${{ github.event.pull_request.merged == true}}
  #   env:
  #     BUILD_ID: ${{ github.event.number }}
  #     BUILD_NAMESPACE: d89793-tools
  #     BRANCH: DGJ62-Automate-Build
  #     BUILD_TAG: latest
  #     APP: forms-flow-web
  #     API: forms-flow-webapi
  #   steps:
  #     # Checkout the PR branch
  #     - name: Print env
  #       run: |
  #         echo BUILD ID: $BUILD_ID
  #         echo BUILD NAMESPACE: $BUILD_NAMESPACE
  #         echo BRANCH: $BRANCH
  #     - name: Checkout Target Branch
  #       uses: actions/checkout@v1
  #     # Log in to OpenShift.
  #     # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
  #     # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
  #     - name: Log in to OpenShift
  #       run: |
  #         oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443


  #     # Build the app images
  #     - name: Build App images
  #       working-directory: "./deployment/openshift"
  #       run: |
  #         test -n "${BRANCH}"
  #         test -n "${BUILD_NAMESPACE}"
  #         echo "BUILIDING ${APP} with tag: ${BUILD_TAG}"
  #               oc -n ${BUILD_NAMESPACE} process -f web_bc.yaml \
  #               -p SOURCE_REPOSITORY_REF=${BRANCH} \
  #               -p SOURCE_REPOSITORY_URL="https://github.com/bcgov/digital-journeys" \
  #               -p SOURCE_CONTEXT_DIR="/forms-flow-web" | oc -n ${BUILD_NAMESPACE} apply -f -
  #         oc -n ${BUILD_NAMESPACE} start-build bc/${APP} --no-cache --wait


      #  # Build the api images
      # - name: Build API images
      #   working-directory: "./deployment/openshift"
      #   run: |
      #     test -n "${BRANCH}"
      #     test -n "${BUILD_NAMESPACE}"
      #     echo "BUILIDING ${API} with tag: ${BUILD_TAG}"
      #           oc -n ${BUILD_NAMESPACE} process -f webapi_bc.yaml \
      #           -p SOURCE_REPOSITORY_REF="" \
      #           -p SOURCE_REPOSITORY_URL="https://github.com/AOT-Technologies/forms-flow-ai" \
      #           -p SOURCE_CONTEXT_DIR="/forms-flow-api" | oc -n ${BUILD_NAMESPACE} apply -f -
      #     oc -n ${BUILD_NAMESPACE} start-build bc/${API} --no-cache --wait



   # Deploy App images in Dev
  deployDev:
    name: Deploy APP to Dev environment
    runs-on: ubuntu-latest
    env:
      BUILD_ID: ${{ github.event.number }}
      NAMESPACE: d89793-dev
      BUILD_NAMESPACE: d89793-tools
      BRANCH: DGJ62-Automate-Build
      APP: forms-flow-web-ci-cd
      API: forms-flow-webapi-ci-cd
    needs:
      - build
    steps:
       # - name: Print env
       #   run: |
       #     echo BUILD ID: $BUILD_ID
       #     echo BUILD NAMESPACE: $BUILD_NAMESPACE
       #     echo BRANCH: $BRANCH
      - name: Checkout Target Branch
        uses: actions/checkout@v1

       # Log in to OpenShift.
       # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
       # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: |
          oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443

      - name: Deploy APP
        run: |
          test -n "${NAMESPACE}"
          test -n "${BUILD_NAMESPACE}"
          test -n "${BRANCH}"
          echo "Current namespace is ${NAMESPACE}"
          #oc -n ${BUILD_NAMESPACE} policy add-role-to-group system:image-puller system:serviceaccounts:${NAMESPACE}
          oc -n ${NAMESPACE} process -f deployment/openshift/web_dc.yaml \
                -p APP_NAME=forms-flow-ai \
                -p NAME=${APP} \
                -p IMAGE_NAMESPACE=${BUILD_NAMESPACE} \
                -p TAG_NAME=latest \
                -p CPU_REQUEST=100m \
                -p CPU_LIMIT=250m \
                -p MEMORY_REQUEST=100Mi \
                -p MEMORY_LIMIT=2Gi \
                -p KC_MOUNT_PATH=/usr/share/nginx/html/config/kc \
                -p MOUNT_PATH=/usr/share/nginx/html/config/ \
                -p FFAWEB_URL="digital-journeys-ci-cd-dev.apps.silver.devops.gov.bc.ca \
                -p AUTH_SERVER_URL="https://digital-journeys-forms-flow-api-dev.apps.silver.devops.gov.bc.ca/auth" \
                -p REACT_APP_CLIENT_ID="61e557ebe8a170e1b2bb566a" \
                -p REACT_APP_STAFF_REVIEWER_ID="61e557ebe8a170e1b2bb5666" \
                -p REACT_APP_STAFF_DESIGNER_ID="61e557ebe8a170e1b2bb565a" \
                -p REACT_APP_USER_RESOURCE_FORM_ID="61e557ebe8a170e1b2bb566e" \
                -p REACT_APP_API_SERVER_URL="https://digital-journeys-forms-flow-dev.apps.silver.devops.gov.bc.ca" \
                -p REACT_APP_API_PROJECT_URL="https://digital-journeys-forms-flow-dev.apps.silver.devops.gov.bc.ca" \
                -p REACT_APP_CAMUNDA_API_URI="https://digital-journeys-camunda-dev.apps.silver.devops.gov.bc.ca/camunda" \
                -p REACT_APP_WEB_BASE_URL="https://digital-journeys-forms-flow-api-dev.apps.silver.devops.gov.bc.ca" \
                -p REACT_APP_ANONYMOUS_ID="61e08f2dfa47988d5b4a4c85" \
                -p REACT_APP_WEBSOCKET_ENCRYPT_KEY=${{ secrets.REACT_APP_WEBSOCKET_ENCRYPT_KEY}} \
                -p REALM="psa-digital-journey-dev" \
                -p REACT_APP_KEYCLOAK_URL="https://digital-journeys-keycloak-dev.apps.silver.devops.gov.bc.ca" \
                -p REACT_APP_APPLICATION_NAME="form-flow-web" \
                -p REACT_APP_WEB_BASE_CUSTOM_URL="https://digital-journeys-dev.apps.silver.devops.gov.bc.ca" \
                -p REACT_APP_USER_ACCESS_PERMISSIONS="'{"accessAllowApplications":true, "accessAllowSubmissions":true}'" \
                -p REACT_APP_FORMIO_JWT_SECRET=${{ secrets.REACT_APP_FORMIO_JWT_SECRET}} \
                -p DESIGNER_ROLE_ID="61e557ebe8a170e1b2bb565a" | \
          oc -n ${NAMESPACE} apply -f -
          oc rollout latest dc/{APP} -n ${NAMESPACE}
          # Check deployment rollout status every 10 seconds (max 10 minutes) until complete.
          ATTEMPTS=0
          ROLLOUT_STATUS_CMD="oc rollout status dc/{APP} -n ${NAMESPACE}"
          until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
            $ROLLOUT_STATUS_CMD
            ATTEMPTS=$((attempts + 1))
            sleep 10
          done
          oc project ${NAMESPACE}     
          echo "Listing pods.."
          oc get pods|grep {APP}
          export ROUTE="$(oc get route {APP} -o jsonpath='{.spec.host}')"
          echo "${APP} is exposed at 'https://'${ROUTE}" 


