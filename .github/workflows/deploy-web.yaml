name: Deploy web app to Openshift

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - test
        - production
  push:
    branches: [ main ]
    paths:
      - "forms-flow-web/**"

defaults:
  run:
    shell: bash
    working-directory: ./forms-flow-web

jobs:
  build-and-push-image-to-dockerhub:
    if: github.event_name == 'push' && github.repository == 'bcgov/digital-journeys'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: formsflow/forms-flow-web
            context: forms-flow-web
            dockerfile: Dockerfile
            name: forms-flow-web
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Set Build TAG for dev
        if: ${{!github.event.inputs.environment}}
        run: echo "BUILD_TAG=dev" >> $GITHUB_ENV
      - name: Set BUILD TAG for test and prod
        if: ${{github.event.inputs.environment}}
        run: echo "BUILD_TAG=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
      
      - run: echo ${{ env.BUILD_TAG }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}
          tags: ${{ env.BUILD_TAG }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: image-registry.apps.silver.devops.gov.bc.ca/d89793-tools
          username: ${{ secrets.SA_USERNAME }}
          password: ${{ secrets.SA_USERNAME_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.name }}

      - name: Build and push Docker image dev
        if: ${{!github.event.inputs.environment || github.event.inputs.environment == 'dev'}}
        uses: docker/build-push-action@v2
        with:
          context: forms-flow-web
          push: true
          tags: dev
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image test/production
        if: ${{github.event.inputs.environment == 'production' || github.event.inputs.environment == 'test'}}
        uses: docker/build-push-action@v2
        with:
          context: forms-flow-web
          push: true
          tags: ${{ github.event.inputs.environment }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Check app deployment status
        env:
          APP: 'forms-flow-web'
          NAMESPACE: ${{ secrets.NAMESPACE }}
        run: |
          ATTEMPTS=0
          ROLLOUT_STATUS_CMD="oc rollout status dc/${APP} -n ${NAMESPACE}"
          until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
            $ROLLOUT_STATUS_CMD
            ATTEMPTS=$((attempts + 1))
            sleep 10
          done
          oc project ${NAMESPACE}     
          echo "Listing pods.."
          oc get pods|grep "${APP}"
          export ROUTE="$(oc get route ${APP} -o jsonpath='{.spec.host}')"
          echo "${APP} is exposed at 'https://'${ROUTE}"
