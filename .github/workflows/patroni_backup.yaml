name: Deploy Patroni(Postgres) backup containers

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - test
        - prod

jobs:
  # build the backup patroni container
  build:
    name: 'Build Patroni Backup APP'
    runs-on: ubuntu-latest
    env:
      BUILD_ID: ${{ github.event.number }}
      BUILD_NAMESPACE: d89793-tools
      NAME: patroni-backup
      BUILD_TAG: latest
    steps:
      # Checkout the PR branch
      - name: Print env
        run: |
          echo BUILD ID: $BUILD_ID
          echo BUILD NAMESPACE: $BUILD_NAMESPACE
      
      - name: Checkout Target Branch
        uses: actions/checkout@v1
      
      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: |
          oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443

      # Build backup container
      - name: Build backup image
        working-directory: './deployment/openshift/Databases'
        run: |
          oc -n ${BUILD_NAMESPACE} process -f prebuilt-db-backup-build.yaml \
          -p NAME=${NAME} \
          -p TAG=${BUILD_TAG} | oc -n ${BUILD_NAMESPACE} apply -f - --wait

  # deploy the backup image
  deploy:
    name: Deploy Patroni to ${{github.event.inputs.environment}} environment
    runs-on: ubuntu-latest
    env:
      BUILD_ID: ${{ github.event.number }}
      BUILD_ENV: ${{ github.event.inputs.environment }}
      NAMESPACE: d89793-${{ github.event.inputs.environment }}
      BUILD_NAMESPACE: d89793-tools
      BRANCH: automated-db-backups
      NAME: patroni-backup
      DB_NAME: app
    needs:
      - build
    steps:
      - name: Checkout Target Branch
        uses: actions/checkout@v1
      
      - name: Print env
        run: |
          echo Git Build ID: $BUILD_ID
          echo Build Env: $BUILD_ENV
          echo Namespace: $NAMESPACE

      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443

      - name: Deploy Backup container
        run: |
          test -n "${NAMESPACE}"
          test -n "${BUILD_NAMESPACE}"
          test -n "${BRANCH}"
          echo "Current namespace is ${NAMESPACE}"

          oc -n ${NAMESPACE} process -f deployment/openshift/Databases/patroni-backup-deploy.yaml \
          -p NAME=${NAME} \
          -p IMAGE_STREAM_TAG=${NAME}:latest \
          -p BUILD_NAMESPACE=${BUILD_NAMESPACE} \
          -p DB_NAME=${DB_NAME} | oc -n ${NAMESPACE} apply -f -

          sleep 30
          oc rollout latest dc/${NAME} -n ${NAMESPACE}

          # Check deployment rollout status every 10 seconds (max 10 minutes) until complete.
          ATTEMPTS=0
          ROLLOUT_STATUS_CMD="oc rollout status dc/${NAME} -n ${NAMESPACE}"
          until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
            $ROLLOUT_STATUS_CMD
            ATTEMPTS=$((attempts + 1))
            sleep 10
          done
